name: Playwright Tests & Dashboard History

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  checks: write

concurrency:
  group: "dashboard"
  cancel-in-progress: true

jobs:
  build_and_report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write

    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4

      # Load prior history from gh-pages (if it exists)
      - name: Download Previous Dashboard History
        run: |
          set -eux
          git fetch origin gh-pages || echo "gh-pages branch not found (first run)."
          mkdir -p gh-pages-temp
          git show origin/gh-pages:report_history.json > gh-pages-temp/report_history.json || echo "no prior history"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies and browsers
        run: |
          set -eux
          npm ci
          npx playwright install --with-deps

      - name: Prepare output dirs
        run: |
          set -eux
          mkdir -p results
          mkdir -p dashboard-output
          if [ -f gh-pages-temp/report_history.json ]; then
            cp gh-pages-temp/report_history.json dashboard-output/
          fi

      # Force Playwright to emit the exact files your script expects
      - name: Run Playwright (JSON + JUnit + HTML)
        run: |
          set -eux
          npx playwright test --reporter=line,json=results/report.json,junit=results/junit.xml,html || true

      # Debug: confirm what got produced
      - name: Inspect results
        run: |
          set -eux
          ls -l results || true
          echo "---- results/report.json ----"
          if [ -f results/report.json ]; then
            jq .stats results/report.json || cat results/report.json
          else
            echo "‚ùå results/report.json missing"
          fi

      # Publish JUnit summary to Checks (use junit schema)
      - name: Publish JUnit XML Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Playwright Test Results
          path: results/junit.xml
          reporter: junit
          fail-on-error: false

      # Build dashboard (your script writes dashboard-output/index.html)
      - name: Generate Historical Dashboard HTML
        run: node generate_dashboard.js

      - name: Verify Dashboard Files Were Created
        run: |
          set -eux
          find dashboard-output -maxdepth 2 -type f -print || true
          test -f dashboard-output/index.html

      # Upload artifacts for this run
      - name: Upload Dashboard HTML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dashboard-html
          path: dashboard-output/index.html

      - name: Upload JSON Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-json
          path: results/report.json

      - name: Upload JUnit XML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-xml
          path: results/junit.xml

      # Deploy to gh-pages (branch-based Pages)
      - name: Deploy Dashboard with History
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dashboard-output
          publish_branch: gh-pages
          destination_dir: .
