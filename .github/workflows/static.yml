name: Playwright Tests & Dashboard History

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Grant top-level permissions required for the entire workflow
permissions:
  contents: write    # Required for peaceiris/actions-gh-pages to commit to gh-pages
  checks: write      # Required for dorny/test-reporter to create check runs

jobs:
  build_and_report:
    runs-on: ubuntu-latest
    # Re-declare permissions here to ensure the job token has the necessary access
    permissions:
      contents: write
      checks: write
      
    steps:
      # --- 1. Checkout Main Branch Code ---
      - name: Checkout main repository code
        uses: actions/checkout@v4
        
      # --- 2. Download Previous History ---
      # Downloads the gh-pages branch into a separate folder to preserve history
      - name: Download Previous Dashboard History
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-temp 

      # --- 3. Setup Environment ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies and browsers
        run: |
          npm ci
          npx playwright install --with-deps
          
      # --- 4. Prepare Dashboard Directory & Copy History ---
      - name: Prepare Dashboard Directory
        run: |
          # Create the final output folder
          mkdir dashboard-output
          # Copy the history file from the gh-pages branch into the output folder
          if [ -f gh-pages-temp/report_history.json ]; then
            cp gh-pages-temp/report_history.json dashboard-output/
          fi
          
      # --- 5. Test Execution and Report Generation ---
      - name: Run Playwright tests and generate JSON/JUnit reports
        # This command creates results/junit.xml and results/report.json
        run: npx playwright test || true
        
      # --- 6. Debug: Verify JUnit File Exists (Optional) ---
      - name: Verify JUnit File Exists
        run: ls -l results/junit.xml
          
      # --- 7. Publish JUnit Summary Report (To GitHub Check Runs) ---
      - name: Publish JUnit XML Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Playwright Test Results
          # This path must match the output in your playwright.config.js
          path: results/junit.xml 
          reporter: jest-junit
          fail-on-error: true
          
      # --- 8. Custom Dashboard Generation ---
      - name: Generate Historical Dashboard HTML
        # The script reads the new JSON, updates the history file, 
        # and creates index.html with charts in dashboard-output/
        run: node generate_dashboard.js

      # --- 9. Deploy Dashboard to gh-pages ---
      - name: Deploy Dashboard with History
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The directory containing index.html and the history JSON
          publish_dir: ./dashboard-output 
          publish_branch: gh-pages
          # Overwrite the root of the gh-pages branch with the new dashboard
          destination_dir: .
