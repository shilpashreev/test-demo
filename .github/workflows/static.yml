name: Playwright Tests & Deploy Report to Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allows manual running of the workflow
  workflow_dispatch:

# Grant necessary permissions
permissions:
  contents: read      # For checking out the code
  pages: write        # To deploy to GitHub Pages
  id-token: write     # For authentication required by deploy-pages action

jobs:
  build_and_test:
    name: Build & Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: write 
      checks: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      # Setup Environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install dependencies and browsers
        run: |
          npm install 
          npx playwright install --with-deps
          
      # Run Tests and Generate JSON report
      - name: Run Playwright tests
        run: npx playwright test || true
      
      # Publish JUnit Summary (Optional)
      - name: Publish JUnit XML Report to Checks
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Playwright Test Results
          path: results/junit.xml
          reporter: jest-junit
          fail-on-error: true
          
      # ðŸ’¡ NEW STEP: Generate Custom Dashboard
      - name: Generate Historical Dashboard HTML
        run: node generate_dashboard.js
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          
      # Setup for Pages deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      # Upload Custom Dashboard Artifact
      - name: Upload Custom Dashboard Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # CRITICAL: Deploy the custom dashboard folder
          path: dashboard-output/