name: Playwright Tests & Dashboard History

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  checks: write

jobs:
  build_and_report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      
    steps:
      # --- 1. Checkout Main Branch Code ---
      - name: Checkout main repository code
        uses: actions/checkout@v4
        
      # --- 2. Robust Download Previous History ---
      - name: Download Previous Dashboard History (Robust)
        run: |
          git fetch origin gh-pages || echo "gh-pages branch not found (First run)."
          
          if [ -d .git/refs/remotes/origin/gh-pages ]; then
            echo "gh-pages branch found. Attempting to retrieve report_history.json from remote root."
            mkdir -p gh-pages-temp
            git show origin/gh-pages:report_history.json > gh-pages-temp/report_history.json || echo "report_history.json not found in gh-pages root."
          else
            echo "Proceeding without history."
          fi

      # --- 3. Setup Environment ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install dependencies and browsers
        run: |
          npm install 
          npx playwright install --with-deps
          
      # üåüüåüüåü ADDED FIX üåüüåüüåü
      # --- 4. Create Output Folder for Playwright Reports ---
      - name: Create Playwright Results Directory
        run: mkdir -p results
        
      # --- 5. Prepare Dashboard Directory & Copy History ---
      - name: Prepare Dashboard Directory
        run: |
          mkdir -p dashboard-output
          # Copy history file from temp location into the processing location
          if [ -f gh-pages-temp/report_history.json ]; then
            echo "Copying history file from gh-pages into dashboard-output."
            cp gh-pages-temp/report_history.json dashboard-output/
          elif [ -f dashboard-output/report_history.json ]; then
            echo "History file already prepared locally."
          else
            echo "No history file found. Starting new history."
          fi
          
      # --- 6. Test Execution and Report Generation ---
      - name: Run Playwright tests and generate JSON/JUnit reports
        run: npx playwright test || true
        
      # --- 7. Verify JUnit File Exists ---
      - name: Verify JUnit File Exists
        run: ls -l results/junit.xml
        
      # --- 8. Publish JUnit Summary Report (To GitHub Check Runs) ---
      - name: Publish JUnit XML Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Playwright Test Results
          path: results/junit.xml 
          reporter: jest-junit
          fail-on-error: true
          
      # --- 9. Custom Dashboard Generation & Verification ---
      - name: Generate Historical Dashboard HTML
        run: node generate_dashboard.js
        
      - name: Verify Dashboard Files Were Created
        run: |
          echo "Listing contents of the deployment directory:"
          ls -l dashboard-output/
          
          if [ -f dashboard-output/index.html ]; then
            echo "‚úÖ index.html FOUND! Deployment should work."
          else
            echo "‚ùå index.html NOT FOUND. The Node.js script failed or wrote the file elsewhere."
            exit 1 
          fi

      # --- 10. Deploy Dashboard to gh-pages ---
      - name: Deploy Dashboard with History
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dashboard-output 
          publish_branch: gh-pages
          destination_dir: .