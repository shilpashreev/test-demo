name: load

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  checks: write

concurrency:
  group: "dashboard"
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node + Playwright
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies & Playwright browsers
        run: |
          npm ci
          npx playwright install --with-deps

      # Step 3: Prepare output folders
      - name: Prepare output directories
        run: |
          mkdir -p results
          mkdir -p dashboard-output

      # Step 4: Run Playwright and generate all reports
      - name: Run Playwright Tests (JSON + JUnit + HTML)
        run: |
          npx playwright test --reporter=line,json=results/report.json,junit=results/junit.xml,html || true

      # Step 5: Copy reports to dashboard output under runs/<run_number>
      - name: Copy reports to dashboard
        run: |
          RUN_DIR="dashboard-output/runs/${{ github.run_number }}"
          mkdir -p "$RUN_DIR"

          # Copy Playwright HTML report
          if [ -d playwright-report ]; then
            cp -r playwright-report "$RUN_DIR/"
          fi

          # Copy raw report files
          if [ -f results/junit.xml ]; then cp results/junit.xml "$RUN_DIR/"; fi
          if [ -f results/report.json ]; then cp results/report.json "$RUN_DIR/"; fi

      # Step 6: Create a basic index.html linking to latest run
      - name: Create latest index.html
        run: |
          echo "Generating index.html..."
          cat > dashboard-output/index.html <<EOF
<!DOCTYPE html>
<html>
  <head>
    <title>Playwright Run #${{ github.run_number }}</title>
    <meta charset="utf-8"/>
  </head>
  <body>
    <h1>Playwright Test Report â€“ Run #${{ github.run_number }}</h1>
    <ul>
      <li><a href="runs/${{ github.run_number }}/playwright-report/report.html">ðŸ§ª View HTML Report</a></li>
      <li><a href="runs/${{ github.run_number }}/junit.xml">ðŸ“„ JUnit XML</a></li>
      <li><a href="runs/${{ github.run_number }}/report.json">ðŸ“Š JSON Report</a></li>
    </ul>
    <p>All historical runs live at <code>/runs/&lt;number&gt;/playwright-report/report.html</code></p>
  </body>
</html>
EOF

      # Step 7: Deploy dashboard-output to gh-pages branch
      - name: Deploy to GitHub Pages (gh-pages branch)
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dashboard-output
          publish_branch: gh-pages
          destination_dir: .
