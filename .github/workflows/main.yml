name: Playwright JS

on: [push, workflow_dispatch]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      site-dir: ${{ steps.mk.outputs.site }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }

      - run: npm ci
      - run: npx playwright install --with-deps
      - run: npx playwright test || true   # allow site to publish even if tests fail

      # (your existing artifacts continue to upload as-is)
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/report.html
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-results
          path: test-results/results.xml

      # Build the static site into ./site (index.html + copy artifacts you want to expose)
      - id: mk
        name: Build site folder
        if: always()
        run: |
          set -eux
          mkdir -p site/runs/${{ github.run_number }}
          # copy your HTML & XML into the site (adjust paths as needed)
          [ -f playwright-report/report.html ] && cp playwright-report/report.html site/runs/${{ github.run_number }}/report.html || true
          [ -f test-results/results.xml ] && cp test-results/results.xml site/runs/${{ github.run_number }}/results.xml || true
          # write a minimal index
          cat > site/index.html <<EOF
          <!doctype html><meta charset="utf-8">
          <title>Runs</title>
          <h1>Runs</h1>
          <p>Current run: <a href="runs/${{ github.run_number }}/">#${{ github.run_number }}</a></p>
          EOF
          echo "site=$(pwd)/site" >> $GITHUB_OUTPUT

      # âœ… Upload exactly ONE Pages artifact
      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.mk.outputs.site }}   # <- only this upload creates the "github-pages" artifact

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
